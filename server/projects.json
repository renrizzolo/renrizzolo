[{"id":"1","slug":"react-native-sectioned-multi-select","coverImage":"/assets/projects/rnsms.png","heading":"React Native Sectioned Multi Select","subHeading":"A highly configurable select component for React Native","link":"https://npmjs.com/package/react-native-sectioned-multi-select","tags":["React Native","Javscript"],"category":"library","details":"<h3>A customizable sectioned multi-select</h3><p>I was looking for a select component that could be used for category/sub category selection in a search filter.</p><p>When nothing that fit my needs turned up, I started working on my own modal based multi-select component.</p><p>I thought it would be a great project to open source!</p><p><br></p><h3>Open source</h3><p>Iterating on this openly has taught me a lot, and it has been great to help and be helped by community members.</p><p>This is my most popular open source project with 1200+ weekly downloads on NPM.</p>"},{"id":"2","slug":"react-native-swipeable-rating","coverImage":"/assets/projects/rnsr.png","heading":"React Native Swipeable Rating","subHeading":"A React Native star rating component with swipe & tap support","link":"https://npmjs.com/package/react-native-swipeable-rating","tags":["React Native","Javscript"],"category":"library","details":"<h3>About</h3><p>I tried a few different Star Rating libraries for React Native, but none of them quite functioned how I wanted.</p><p>This was also a good opportunity for me to learn how to use the <a href=\"https://facebook.github.io/react-native/docs/panresponder\" target=\"_blank\">panResponder</a>!</p><p><br></p><h3>Functionality</h3><p>Stars can be either tapped or swiped through to select the desired rating.</p><p>The rating can also be controlled by a prop, so you can easily set its initial value (e.g if coming from an API).</p><p>swiping/tapping can also be disabled if you just need a sleek looking star rating.</p>"},{"id":"3","slug":"casual-sparks","coverImage":"/assets/projects/casual-sparks.png","heading":"Casual Sparks","subHeading":"Record label website with custom Sound Cloud player","link":"https://casualsparks.com","tags":["Javscript","React","Gatsby","APIs"],"category":"website","details":"<h3>About</h3><p>A React + Gatsby site styled with SCSS, with some React Spring for animations.</p><p>The site includes statically generated artist and release pages.</p><p><br></p><p><img src=\"/assets/uploads/1562212887609-caspa-mob.png\"></p><p><br></p><p>The SoundCloud player includes playlist support, seeking and keyboard control.</p><p>I utilzied the React Context API to sync the release items' play state to the global player.</p><p>The site is deployed on Netlify and uses Netlify CMS for creating &amp; updating the markdown files.</p>"},{"id":"4","slug":"ren-rizzolo","coverImage":"/assets/projects/renrizzolo-web.png","heading":"Ren Rizzolo","subHeading":"Simple portfolio site with custom route transitions component and colour theme picker","link":"https://renrizzolo.com","tags":["Javscript","Stencil JS","CSS variables"],"category":"website","details":"<pre class=\"ql-syntax\" spellcheck=\"false\">InternalError: too much recursion\r\n</pre><p>^jokes</p><p><br></p><h3>Stencil</h3><p>I wanted to try something different, so I chose the <a href=\"https://stenciljs.com\" target=\"_blank\">Stencil</a> web components framework.</p><p>It has a similar API to React, and uses JSX so it wasn't hard to get started, despite a few quirks.</p><p>I built a kind of crude transition component for routing, and for individual items (similar to trail in React Spring).</p><p><br></p><p>This was also a nice opportunity to use TypeScript too, something I hadn't had the chance to be exposed to yet.</p><p><br></p><h3>Bodymovin / Lottie</h3><p>I started out just animating the svg wave with css, which although it worked well it was a little cpu intensive (animating background-position, which causes repaints).</p><p><br></p><p>I had heard about Lottie through my React Native development, so I thought I'd give it a go.</p><p>It was a pretty simple process of creating the animation in After Effects, exporting it to JSON with the Body Movin extension, then playing it with the Lottie web player.</p><p>As well as the wave animation, I incorporated it into the hover state of icons, which really gave them life!</p>"},{"id":"5","slug":"property-weekly","coverImage":"/assets/projects/property-weekly.png","heading":"Property Weekly","subHeading":"Bespoke Realestate website built on WordPress","link":"https://propertyWeekly.net.au","tags":["WordPress","Bootstrap","Jquery","SCSS","grunt"],"category":"website","details":"<h3>Wordpress based Blog</h3><p>The heart of the site is a custom WordPress theme. The site styling is mobile first, themed using SCSS, with its foundations being Bootstrap and the Bones starter theme.</p><p>Advanced Custom Fields was used for custom featured property articles, with property data specific fields like Auction info, agent and number of beds/bathrooms/car spaces.</p><p><img src=\"/assets/uploads/1562220001869-pw-articles.jpg\"></p><p><br></p><h3>RealestateView API integration</h3><p>Property Weekly uses the RealestateView API for Australian Realestate listing data.</p><p>Listings are displayed as a grid, list or map.</p><p>Individual listings are served as virtual wordpress pages, making them SEO friendly.</p><p>Various widgets were built for displaying a featured listing on the front page, or a grid of properties from a featured agent.</p><p><img src=\"/assets/uploads/1562220224007-pw-listing.jpg\"></p><p><br></p><h3>Digital Edition viewer</h3><p>PDFJS based print edition browser. A new post type was created for pdfs, with an easy pdf upload form using the WordPress media browser.</p><p><img src=\"/assets/uploads/1562219720753-pw-pdfs.jpg\"></p><p><br></p><p><br></p>"},{"id":"6","slug":"subscribe-jewishnews","coverImage":"/assets/projects/subscribe-jewishnews.png","heading":"Jewish News Subscriptions","subHeading":"Subscriptions platform for The Australian Jewish News","link":"https://subscribe.jewishnews.net.au","tags":["Bootstrap","Jquery","SCSS","grunt"],"category":"website","details":"<p>Online &amp; print subscriptions website built with membership framework Amember. Uses Stripe for payments with recurring subscriptions. Grants digital access to apps &amp; online epaper through an API.</p>"},{"id":7,"slug":"pdfs-jewishnews","coverImage":"/assets/projects/pdfs-screen.png","heading":"Jewish News PDFs","subHeading":"PDF repository for finding & disseminating supplements & tear sheets.","link":"","tags":["nodeJS","postgresQL","React","Apollo","graphql","AWS"],"category":"Website","details":"<p>React PWA with code splitting & server side rendering.</p><p>PDF viewer & catalog, S3 storage, server side pdf processing/compression/collation, thumbnail generation, postgresql -> graphql schema via Postgraphile, JWT authentication, link shortening.</p>"},{"id":"8","slug":"lightgallery-for-gutenberg","coverImage":"/assets/uploads/lightgallery-for-gutenberg.png","heading":"Lightgallery for Gutenberg","subHeading":"WordPress Gutenberg gallery plugin","link":"https://github.com/renrizzolo/light-gallery-for-gutenberg","tags":["WordPress","PHP","React","Gutenberg"],"category":"library","details":"<h3>About</h3><p>I started playing around with WordPress Gutenberg, knowing that the 5.0 update was not too far off. I already had built a gallery plugin with Lightgallery, and saw the need for a proper slider gallery in Gutenberg (the native gallery only displays a grid of images, no exanding/slideshow).</p><p><br></p><p><img src=\"/assets/uploads/1562204606775-lightgallery-gutenberg.png\"></p><p><br></p><p>I one-upped my previous implementation by combining <a href=\"https://sachinchoolur.github.io/lightGallery/\" target=\"_blank\">Lightgallery</a> and <a href=\"http://sachinchoolur.github.io/lightslider\" target=\"_blank\">Lightslider</a>, so the editor can (optionally) display a working slider in the article, that can be expanded to a full-screen gallery.</p><p><br></p><p><br></p>"}]